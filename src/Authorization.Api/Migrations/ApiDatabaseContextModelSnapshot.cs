// <auto-generated />
using System;
using Authorization.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Authorization.Migrations
{
    [DbContext(typeof(ApiDatabaseContext))]
    partial class ApiDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Authorization.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BanCounter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BanEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastBanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("RoleIdBeforeBan")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BanCounter = 0,
                            DateOfBirth = new DateTime(1998, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "User1Surname1@email.com",
                            LastBanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User1",
                            Password = "testUser1Surname1",
                            RoleId = 3,
                            RoleIdBeforeBan = 0,
                            Surname = "Surname1"
                        },
                        new
                        {
                            Id = 2,
                            BanCounter = 0,
                            DateOfBirth = new DateTime(2006, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "User2Surname2@email.com",
                            LastBanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User2",
                            Password = "testUser2Surname2",
                            RoleId = 1,
                            RoleIdBeforeBan = 0,
                            Surname = "Surname2"
                        },
                        new
                        {
                            Id = 3,
                            BanCounter = 0,
                            DateOfBirth = new DateTime(2006, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "User3Surname3@email.com",
                            LastBanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User3",
                            Password = "testUser3Surname3",
                            RoleId = 4,
                            RoleIdBeforeBan = 0,
                            Surname = "Surname3"
                        },
                        new
                        {
                            Id = 4,
                            BanCounter = 0,
                            DateOfBirth = new DateTime(1980, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "User4Surname4@email.com",
                            LastBanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User4",
                            Password = "testUser4Surname4",
                            RoleId = 2,
                            RoleIdBeforeBan = 0,
                            Surname = "Surname4"
                        },
                        new
                        {
                            Id = 5,
                            BanCounter = 0,
                            DateOfBirth = new DateTime(1981, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "User5Surname5@email.com",
                            LastBanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User5",
                            Password = "testUser5Surname5",
                            RoleId = 1,
                            RoleIdBeforeBan = 0,
                            Surname = "Surname5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
